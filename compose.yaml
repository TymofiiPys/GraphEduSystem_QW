services:
  postgres:
    container_name: postgres
    image: 'postgres:17-alpine'
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PWD}
      - POSTGRES_USER=${DB_UNAME}
    ports:
      - 5431:5432
    volumes:
      - ./GES-db:/var/lib/postgresql/data
    networks:
      - db

  # pgadmin:
  #   container_name: pgadmin
  #   image: 'dpage/pgadmin4:9.3'
  #   ports:
  #     - 5050:80
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=${PG_EMAIL}
  #     - PGADMIN_DEFAULT_PASSWORD=${PG_PWD}
  #   networks:
  #     - db
  #     - pg
  #   volumes:
  #     - pgadmin-data:/var/lib/pgadmin

  spring:
    container_name: spring
    build: ./GES-backend
    depends_on:
      - postgres
    ports:
      - "8080:8080"
      - "35729:35729"
    environment:
      SPRING_DATASOURCE_URL: ${JDBC_DB}
      SPRING_DATASOURCE_USERNAME: ${DB_UNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PWD}
      SPRING_DEV_SECRET: ${SPRING_DEV_SECRET}
    volumes:
      - ./GES-backend:/app
      - gradle-dep:/root/.gradle
    networks:
      - db
      - spring

  frontend:
    container_name: frontend
    build:
      context: ./ges-frontend
    ports:
      - "3000:3000"
    networks:
      - spring
    volumes:
      # - /app/node_modules
      - ./ges-frontend:/app

networks:
  db: {}
  pg: {}
  spring: {}

volumes:
  # pgadmin-data:
  gradle-dep: